/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.AnalystOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.PatientOrganization;
import Business.Patient.Patients;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientAnalysisWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dhairyasheel
 */
public class DoctorPatientDetails extends javax.swing.JPanel {

    /**
     * Creates new form DoctorPatientDetails
     */
    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private  EcoSystem business;
    public DoctorPatientDetails(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise,  EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        setWorkRequestUpdate(account);
        populatePatientsTable(account);
      //  valueLabel.setText(enterprise.getName());
    }

    public void populatePatientsTable(UserAccount account){
         DefaultTableModel model = (DefaultTableModel)patientDetailsjTable.getModel();
       String name = "";
        model.setRowCount(0);
        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof DoctorOrganization){
                for(Employee emp  :  organization.getEmployeeDirectory().getEmployeeList()){
                     if(account.getUsername().equalsIgnoreCase(emp.getName())){
                         name = emp.getName(); 
                      }
                }
                
                
                
            }
            if(organization instanceof PatientOrganization){
                
                for(Patients pt : organization.getPatientsDirectory().getPatientsList()){
                    
                if(pt.getAssignedDoc().equalsIgnoreCase(name)){
                    
                    
                    Object[] row = new Object[4];
            row[0] = pt;
            row[1] = pt.getAge();
            row[2] = pt.getWeight();
            row[3] = pt.getAssignedDoc();
            
            model.addRow(row);
                }
                    
                }
            }
        }        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientDetailsjTable = new javax.swing.JTable();
        labReportsJButton = new javax.swing.JButton();
        sendReportJButton = new javax.swing.JButton();
        requesAdminJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        survivalRate = new javax.swing.JTextField();

        patientDetailsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Doctor", "BP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientDetailsjTable);

        labReportsJButton.setText("Lab Reports");
        labReportsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labReportsJButtonActionPerformed(evt);
            }
        });

        sendReportJButton.setText("Send Reports");
        sendReportJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendReportJButtonActionPerformed(evt);
            }
        });

        requesAdminJButton.setText("Request Admin");
        requesAdminJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requesAdminJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Survival Rate       :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(survivalRate, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(232, 232, 232)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(requesAdminJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labReportsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendReportJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(233, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(survivalRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(192, 192, 192)
                    .addComponent(labReportsJButton)
                    .addGap(27, 27, 27)
                    .addComponent(sendReportJButton)
                    .addGap(27, 27, 27)
                    .addComponent(requesAdminJButton)
                    .addContainerGap(193, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void labReportsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labReportsJButtonActionPerformed
/*
        int selectedRow = patientDetailsjTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        WorkRequest request = (WorkRequest)patientDetailsjTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
     //   populateTable();
        */
        
        
        DoctorWorkAreaJPanel requestlabtestJPanel = new DoctorWorkAreaJPanel(userProcessContainer, userAccount,organization, enterprise);
        userProcessContainer.add("requestlabtestJPanel", requestlabtestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_labReportsJButtonActionPerformed

    public void setWorkRequestUpdate(UserAccount account){

        for(WorkRequest wk : account.getWorkQueue().getWorkRequestList()){
             if(wk.getStatus() != null){
                 
                 double pr = ((PatientAnalysisWorkRequest)wk).getSurvivalRate();
                 
                 survivalRate.setText(Double.toString(pr));
                 
             }
         }
            
        
        
        
    }
        
    
    
    
    
    private void sendReportJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendReportJButtonActionPerformed

        int selectedRow = patientDetailsjTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        PatientAnalysisWorkRequest patlist =  new PatientAnalysisWorkRequest();
        
        Patients p = (Patients)patientDetailsjTable.getValueAt(selectedRow, 0);
                
        
        patlist.setPatient(p);
        
        Organization org = null;
        for(Enterprise ent : business.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList())
        for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof AnalystOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(patlist);
            userAccount.getWorkQueue().getWorkRequestList().add(patlist);
        }
      
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_sendReportJButtonActionPerformed

    private void requesAdminJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requesAdminJButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_requesAdminJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton labReportsJButton;
    private javax.swing.JTable patientDetailsjTable;
    private javax.swing.JButton requesAdminJButton;
    private javax.swing.JButton sendReportJButton;
    private javax.swing.JTextField survivalRate;
    // End of variables declaration//GEN-END:variables
}
